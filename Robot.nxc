#define MAX_DISTANCE_MS 0.46232
#define DISTANCE_TIRES_MM 155
#define THRESHOLD 45

sub turn_degrees(int degrees, int speed){
	int signedSpeed = speed * (degrees / abs(degrees));
	OnFwd(OUT_A, signedSpeed);
	OnRev(OUT_B, signedSpeed);
	float distance = abs(PI * DISTANCE_TIRES_MM * (degrees / 360.0));
	float velocity = MAX_DISTANCE_MS * (speed / 100.0) * 2;
	int waitTime = distance / velocity;
	//TextOut(0, 0, "wait: " + NumToStr(waitTime));
	//TextOut(0, 10, "distance: " + NumToStr(distance));
	//TextOut(0, 20, "velocity: " + NumToStr(velocity));
	Wait(waitTime);
	Off(OUT_AB);
}

inline int get_turn_degrees(){
	if(SENSOR_1 < THRESHOLD){
		if(SENSOR_2 < THRESHOLD){
			if(SENSOR_3 < THRESHOLD){
				return 0;
			} else {
				return -5;
			}
		} else {
			if(SENSOR_3 < THRESHOLD){
				return 0;
			} else {
				return -10;
			}
		}
	} else {
		if(SENSOR_2 < THRESHOLD){
			if(SENSOR_3 < THRESHOLD){
				return 5;
			} else {
				return 0;
			}
		} else {
			if(SENSOR_3 < THRESHOLD){
				return 10;
			} else {
				return 0;
			}
		}
	}
}

task main(){
	//Sensor 1 LEFT 2 Middle 3 Right
	SetSensorLight(IN_1);
	SetSensorLight(IN_2);
	SetSensorLight(IN_3);
	while(true){
		int degrees = get_turn_degrees();
		TextOut(0, 0, NumToStr(degrees));
		turn_degrees(degrees, 60);
		OnRev(OUT_AB, 60);
		Wait(10);
	}
}
